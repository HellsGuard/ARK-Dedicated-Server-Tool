<Window x:Class="ARK_Server_Manager.RCONWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"   
        xmlns:rcon="clr-namespace:ARK_Server_Manager.Lib.ViewModel.RCON"
        xmlns:lib="clr-namespace:ARK_Server_Manager.Lib"
        xmlns:vm="clr-namespace:ARK_Server_Manager.Lib.ViewModel"
        xmlns:local="clr-namespace:ARK_Server_Manager"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        Width="1024" Height="768" ResizeMode="CanResizeWithGrip"
        SizeChanged="RCON_SizeChanged" LocationChanged="RCON_LocationChanged"
        Name="RCON" Icon="../Art/favicon.ico" Title="{Binding RCONParameters.WindowTitle}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Globalization\en-US\en-US.xaml"/>
                <ResourceDictionary Source="..\Styles\Default.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <local:ScrollToBottomAction x:Key="ScrollToBottomAction" />
            <vm:NullValueConverter x:Key="NullValueConverter"/>
            <vm:IsNullValueConverter x:Key="IsNullValueConverter"/>
            <vm:IsNullOrWhiteSpaceValueConverter x:Key="IsNullOrWhiteSpaceValueConverter"/>
            <vm:EnumConverter x:Key="EnumConverter"/>
            <vm:EnumFlagsConverter x:Key="EnumFlagsConverter"/>
            
            <SolidColorBrush x:Key="HeaderBrush" Color="#FFF0F0F0"/>
            
            <Style x:Key="ServerStatus" TargetType="{x:Type Label}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ServerRCON.Status}" Value="Connected">
                        <Setter Property="Foreground" Value="Green"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ServerRCON.Status}" Value="Disconnected">
                        <Setter Property="Foreground" Value="Red"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="PlayerStatus" TargetType="Border">
                <Setter Property="BorderBrush" Value="Gray"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsOnline}"            Value="True">
                        <Setter Property="BorderBrush" Value="LightGreen"/>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsOnline}"      Value="False" />
                            <Condition Binding="{Binding IsValid}"       Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="Orange"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsOnline}"      Value="False" />
                            <Condition Binding="{Binding HasBan}"        Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="Red"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsOnline}"      Value="False" />
                            <Condition Binding="{Binding IsWhitelisted}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="#0066CC"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="SteamName" TargetType="Label">
                <Setter Property="Content" Value="{Binding SteamName}"/>
                <Setter Property="ToolTip" Value="{Binding SteamId}"/>
                <Setter Property="Background" Value="AliceBlue"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsAdmin}" Value="True">
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Foreground" Value="#0066CC"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsAdmin}" Value="False">
                        <Setter Property="FontStyle" Value="Normal"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="Tribename" TargetType="Label">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding TribeName, Converter={StaticResource IsNullOrWhiteSpaceValueConverter}}" Value="True">
                        <Setter Property="Content" Value="No tribe"/>
                        <Setter Property="FontStyle" Value="Italic"/>
                        <Setter Property="Foreground" Value="LightGray"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TribeName, Converter={StaticResource IsNullOrWhiteSpaceValueConverter}}" Value="False">
                        <Setter Property="Content" Value="{Binding PlayerData.Tribe.Name}"/>
                        <Setter Property="FontStyle" Value="Normal"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <ObjectDataProvider MethodName="GetValues"
                ObjectType="{x:Type sys:Enum}"
                x:Key="InputModes">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="local:InputMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <DockPanel x:Name="dockPanel">
            <Grid DockPanel.Dock="Bottom" Margin="2,1,2,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                
                <Label Grid.Column="0" Content="{DynamicResource RCON_ModeLabel}"/>
                <ComboBox Grid.Column="1" ItemsSource="{Binding Source={StaticResource InputModes}}" SelectedItem="{Binding CurrentInputMode, Mode=TwoWay}" Margin="0,0,2,0"/>
                <TextBox Name="ConsoleInput" TabIndex="0" Grid.Column="2" KeyUp="ConsoleInput_KeyUp" BorderBrush="LightGray" VerticalContentAlignment="Center" IsTabStop="True"/>
            </Grid>
            <Border DockPanel.Dock="Top" BorderThickness="1" BorderBrush="LightGray" Margin="2" Background="{StaticResource HeaderBrush}">
                <DockPanel Margin="2,2,2,1" LastChildFill="False">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                        <Menu VerticalAlignment="Center" Margin="1" Background="{StaticResource HeaderBrush}">
                            <MenuItem Header="{DynamicResource RCON_Menu_File}" VerticalAlignment="Stretch">
                                <MenuItem Header="{DynamicResource RCON_Menu_ViewLogs}"    Command="{Binding ViewLogsCommand}"/>
                                <MenuItem Header="{DynamicResource RCON_Menu_ClearLogs}">
                                    <MenuItem Header="{DynamicResource RCON_Menu_Confirm}" Command="{Binding ClearLogsCommand}"/>
                                </MenuItem>
                            </MenuItem>
                        </Menu>

                        <Menu VerticalAlignment="Center" Margin="1" Background="{StaticResource HeaderBrush}">
                            <MenuItem Header="{DynamicResource RCON_Menu_Console}" VerticalAlignment="Stretch">
                                <MenuItem Header="{DynamicResource RCON_Menu_AutoScroll}" IsCheckable="True" IsChecked="{Binding ScrollOnNewInput}"/>
                            </MenuItem>
                        </Menu>

                        <Menu VerticalAlignment="Center" Margin="1" Background="{StaticResource HeaderBrush}">
                            <MenuItem Header="{DynamicResource RCON_Menu_Server}" VerticalAlignment="Stretch">
                                <MenuItem Header="{DynamicResource RCON_Menu_SaveWorld}">
                                    <MenuItem Header="{DynamicResource RCON_Menu_Confirm}" Command="{Binding SaveWorldCommand}"/>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource RCON_Menu_DestroyWildDinos}">
                                    <MenuItem Header="{DynamicResource RCON_Menu_Confirm}" Command="{Binding DestroyWildDinosCommand}"/>
                                </MenuItem>
                            </MenuItem>
                        </Menu>

                        <Menu VerticalAlignment="Center" Margin="1" Background="{StaticResource HeaderBrush}">
                            <MenuItem Header="{DynamicResource RCON_Menu_Players}">
                                <MenuItem Header="{DynamicResource RCON_Menu_Sort}">
                                    <MenuItem Header="{DynamicResource RCON_Menu_SortOnline}"         IsCheckable="True" Command="{Binding SortPlayersCommand}"   CommandParameter="{x:Static local:PlayerSortType.Online}"         IsChecked="{Binding PlayerSorting, Converter={StaticResource EnumConverter}, ConverterParameter=Online}"/>
                                    <MenuItem Header="{DynamicResource RCON_Menu_SortName}"           IsCheckable="True" Command="{Binding SortPlayersCommand}"   CommandParameter="{x:Static local:PlayerSortType.Name}"           IsChecked="{Binding PlayerSorting, Converter={StaticResource EnumConverter}, ConverterParameter=Name}"/>
                                    <MenuItem Header="{DynamicResource RCON_Menu_SortTribe}"          IsCheckable="True" Command="{Binding SortPlayersCommand}"   CommandParameter="{x:Static local:PlayerSortType.Tribe}"          IsChecked="{Binding PlayerSorting, Converter={StaticResource EnumConverter}, ConverterParameter=Tribe}"/>
                                    <MenuItem Header="{DynamicResource RCON_Menu_SortLastUpdated}"    IsCheckable="True" Command="{Binding SortPlayersCommand}"   CommandParameter="{x:Static local:PlayerSortType.LastUpdated}"    IsChecked="{Binding PlayerSorting, Converter={StaticResource EnumConverter}, ConverterParameter=LastUpdated}"/>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource RCON_Menu_Filter}">
                                    <MenuItem Header="{DynamicResource RCON_Menu_FilterOnline}"       IsCheckable="True" Command="{Binding FilterPlayersCommand}" CommandParameter="{x:Static local:PlayerFilterType.Online}"       IsChecked="{Binding PlayerFiltering, Converter={StaticResource EnumFlagsConverter}, ConverterParameter=Online, Mode=OneWay}"/>
                                    <MenuItem Header="{DynamicResource RCON_Menu_FilterOffline}"      IsCheckable="True" Command="{Binding FilterPlayersCommand}" CommandParameter="{x:Static local:PlayerFilterType.Offline}"      IsChecked="{Binding PlayerFiltering, Converter={StaticResource EnumFlagsConverter}, ConverterParameter=Offline, Mode=OneWay}"/>
                                    <MenuItem Header="{DynamicResource RCON_Menu_FilterAdmin}"        IsCheckable="True" Command="{Binding FilterPlayersCommand}" CommandParameter="{x:Static local:PlayerFilterType.Admin}"        IsChecked="{Binding PlayerFiltering, Converter={StaticResource EnumFlagsConverter}, ConverterParameter=Admin, Mode=OneWay}"/>
                                    <MenuItem Header="{DynamicResource RCON_Menu_FilterBanned}"       IsCheckable="True" Command="{Binding FilterPlayersCommand}" CommandParameter="{x:Static local:PlayerFilterType.Banned}"       IsChecked="{Binding PlayerFiltering, Converter={StaticResource EnumFlagsConverter}, ConverterParameter=Banned, Mode=OneWay}"/>
                                    <MenuItem Header="{DynamicResource RCON_Menu_FilterWhitelisted}"  IsCheckable="True" Command="{Binding FilterPlayersCommand}" CommandParameter="{x:Static local:PlayerFilterType.Whitelisted}"  IsChecked="{Binding PlayerFiltering, Converter={StaticResource EnumFlagsConverter}, ConverterParameter=Whitelisted, Mode=OneWay}"/>
                                    <MenuItem Header="{DynamicResource RCON_Menu_FilterInvalid}"      IsCheckable="True" Command="{Binding FilterPlayersCommand}" CommandParameter="{x:Static local:PlayerFilterType.Invalid}"      IsChecked="{Binding PlayerFiltering, Converter={StaticResource EnumFlagsConverter}, ConverterParameter=Invalid, Mode=OneWay}"/>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource RCON_Menu_ShowAvatars}"            IsCheckable="True" Command="{Binding ShowAvatarsCommand}" IsChecked="{Binding CurrentConfig.RCON_ShowPlayerAvatars}"/>
                            </MenuItem>
                        </Menu>
                    </StackPanel>
                    
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                        <Label Content="{DynamicResource RCON_AdminNameLabel}"/>
                        <TextBox Text="{Binding CurrentConfig.RCON_AdminName}" Width="100" ToolTip="{DynamicResource RCON_AdminNameTooltip}"/>
                        <Label Content="{DynamicResource RCON_StatusLabel}" Margin="10,0,0,0"/>
                        <Label Content="{Binding ServerRCON.Status}" Style="{DynamicResource ServerStatus}"/>
                        <Label Content="{DynamicResource RCON_PlayersLabel}" Margin="5,0,0,0"/>
                        <Label Content="{Binding ServerRCON.CountOnlinePlayers, FallbackValue=0}"/>
                        <Label Content="{DynamicResource RCON_PlayersSeparatorLabel}" Name="PlayerCountSeparator"/>
                        <Label Content="{Binding RCONParameters.MaxPlayers, FallbackValue=0}" Name="MaxPlayerLabel"/>
                    </StackPanel>
                </DockPanel>
            </Border>

            <DockPanel DockPanel.Dock="Right" MinWidth="200" Margin="1,1,2,1" DataContext="{Binding}" SourceUpdated="PlayerFilter_SourceUpdated">
                <DockPanel DockPanel.Dock="Top">
                    <Label DockPanel.Dock="Left" Content="{DynamicResource RCON_FilterLabel}" HorizontalAlignment="Center"/>
                    <TextBox DockPanel.Dock="Left" Text="{Binding PlayerFilterString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" BorderBrush="LightGray" VerticalContentAlignment="Center" IsTabStop="True" Margin="0" Padding="2"/>
                </DockPanel>

                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                    <Label Content="{DynamicResource RCON_ProfileCountLabel}" HorizontalAlignment="Center"/>
                    <Label Content="{Binding ServerRCON.CountPlayers, FallbackValue=0}" HorizontalAlignment="Center"/>
                    <Label Content="{DynamicResource RCON_ProfileInvalidCountLabel}" HorizontalAlignment="Center">
                        <Label.Style>
                            <Style BasedOn="{StaticResource {x:Type Label}}" TargetType="{x:Type Label}">
                                <Setter Property="Foreground" Value="Black"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ServerRCON.CountInvalidPlayers, FallbackValue=0, Converter={vm:GreaterThanIntValueConverter 0}}" Value="true">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <Label Content="{Binding ServerRCON.CountInvalidPlayers, FallbackValue=0}" HorizontalAlignment="Center">
                        <Label.Style>
                            <Style BasedOn="{StaticResource {x:Type Label}}" TargetType="{x:Type Label}">
                                <Setter Property="Foreground" Value="Black"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ServerRCON.CountInvalidPlayers, FallbackValue=0, Converter={vm:GreaterThanIntValueConverter 0}}" Value="true">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </StackPanel>
                
                <ListBox DockPanel.Dock="Top" ItemsSource="{Binding ServerRCON.Players}" BorderBrush="LightGray" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                    <ListBox.Resources>
                        <lib:BindingProxy x:Key="proxy" Data="{Binding ElementName=RCON}"/>
                        <BitmapImage x:Key="NoAvatar" UriSource="../Art/NoAvatar.png" />
                    </ListBox.Resources>
                    
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="{DynamicResource RCON_Menu_ChatPlayer}"                                        Command="{Binding Source={StaticResource proxy}, Path=Data.ChatPlayerCommand}" CommandParameter="{Binding}" />
                                        <MenuItem Header="{DynamicResource RCON_Menu_RenamePlayer}"                                      Command="{Binding Source={StaticResource proxy}, Path=Data.RenamePlayerCommand}" CommandParameter="{Binding}" />
                                        <MenuItem Header="{DynamicResource RCON_Menu_RenameTribe}"                                       Command="{Binding Source={StaticResource proxy}, Path=Data.RenameTribeCommand}" CommandParameter="{Binding}" />
                                        <Separator/>
                                        <MenuItem Header="{DynamicResource RCON_Menu_Kill}">
                                            <MenuItem Header="{DynamicResource RCON_Menu_Confirm}"                                       Command="{Binding Source={StaticResource proxy}, Path=Data.KillPlayerCommand}" CommandParameter="{Binding}"/>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem Header="{DynamicResource RCON_Menu_Kick}"                                              Command="{Binding Source={StaticResource proxy}, Path=Data.KickPlayerCommand}" CommandParameter="{Binding}" />
                                        <MenuItem Header="{DynamicResource RCON_Menu_Banned}"      IsCheckable="{Binding IsBanned}"      Command="{Binding Source={StaticResource proxy}, Path=Data.BanPlayerCommand}" CommandParameter="{Binding}" />
                                        <MenuItem Header="{DynamicResource RCON_Menu_Whitelisted}" IsCheckable="{Binding IsWhitelisted}" Command="{Binding Source={StaticResource proxy}, Path=Data.WhitelistPlayerCommand}" CommandParameter="{Binding}" />
                                        <Separator/>
                                        <MenuItem Header="{DynamicResource RCON_Menu_ViewSteamProfile}"                                  Command="{Binding Source={StaticResource proxy}, Path=Data.ViewPlayerSteamProfileCommand}" CommandParameter="{Binding}" />
                                        <MenuItem Header="{DynamicResource RCON_Menu_ViewProfile}"                                       Command="{Binding Source={StaticResource proxy}, Path=Data.ViewPlayerProfileCommand}" CommandParameter="{Binding}" />
                                        <MenuItem Header="{DynamicResource RCON_Menu_ViewTribe}"                                         Command="{Binding Source={StaticResource proxy}, Path=Data.ViewPlayerTribeCommand}" CommandParameter="{Binding}"/>
                                        <Separator/>
                                        <MenuItem Header="{DynamicResource RCON_Menu_CopySteamId}"                                       Command="{Binding Source={StaticResource proxy}, Path=Data.CopySteamIDCommand}" CommandParameter="{Binding}"/>
                                        <MenuItem Header="{DynamicResource RCON_Menu_CopyPlayerId}"                                      Command="{Binding Source={StaticResource proxy}, Path=Data.CopyPlayerIDCommand}" CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type rcon:PlayerInfo}">
                            <Border BorderThickness="2" Padding="1" Style="{DynamicResource PlayerStatus}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding PlayerAvatarWidth, ElementName=RCON}"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <Image Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Source="{Binding AvatarImage, Converter={StaticResource ResourceKey=NullValueConverter}, ConverterParameter={StaticResource ResourceKey=NoAvatar}}" Width="48" Height="48" Stretch="Uniform"/>
                                    <StackPanel Grid.Column="1" HorizontalAlignment="Stretch">
                                        <Label Padding="0,-1,0,-1" Style="{DynamicResource SteamName}"/>
                                        <StackPanel Orientation="Horizontal" Margin="0" >
                                            <Label Content="{Binding CharacterName}" Padding="0,-1,0,-1"/>
                                            <TextBlock Text="{Binding PlayerData.Level, StringFormat=({0})}" Margin="5,0,0,0" Padding="0,-1,0,-1" />
                                        </StackPanel>
                                        <Label Padding="0,-1,0,-1" Style="{DynamicResource Tribename}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
            
            <RichTextBox DockPanel.Dock="Top" BorderBrush="LightGray" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Visible"  Margin="2,1,1,1" HorizontalScrollBarVisibility="Auto" IsReadOnlyCaretVisible="True" IsReadOnly="True" IsTabStop="False">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged" >
                        <local:ScrollToBottomAction IsEnabled="{Binding ScrollOnNewInput}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <RichTextBox.Resources>
                    <Style TargetType="{x:Type Paragraph}">
                        <Setter Property="Margin" Value="0"/>
                    </Style>
                    <Style TargetType="{x:Type local:RCONOutput_Command}">
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Style>
                    <Style TargetType="{x:Type local:RCONOutput_NoResponse}">
                        <Setter Property="FontStyle" Value="Italic"/>
                    </Style>
                    <Style TargetType="{x:Type local:RCONOutput_CommandOutput}">
                        <Setter Property="FontStyle" Value="Normal"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                    </Style>
                    <Style TargetType="{x:Type local:RCONOutput_CommandTime}">
                        <Setter Property="FontStyle" Value="Normal"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                    </Style>
                    <Style TargetType="{x:Type local:RCONOutput_ConnectionChanged}">
                        <Setter Property="FontStyle" Value="Italic"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                    </Style>
                    <Style TargetType="{x:Type local:RCONOutput_Broadcast}">
                        <Setter Property="FontStyle" Value="Normal"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Style>
                    <Style TargetType="{x:Type local:RCONOutput_Comment}">
                        <Setter Property="FontStyle" Value="Italic"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                    </Style>
                </RichTextBox.Resources>
                <FlowDocument Name="ConsoleContent"/>
            </RichTextBox>
        </DockPanel>

        <!-- It's important that this is in the end of the XAML as it needs to be on top of everything else! -->
        <Grid x:Name="inputBox" Visibility="Collapsed" DockPanel.Dock="Top" >
            <Grid Background="Black" Opacity="0.5"/>
            <Border MinWidth="250" Background="Orange" BorderBrush="Black" BorderThickness="1" CornerRadius="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel>
                    <TextBlock x:Name="inputTitle" Margin="5" FontWeight="Bold" />
                    <TextBox x:Name="inputTextBox" MinWidth="150" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0,5,0" MaxLength="200"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="button1" Margin="5" Content="{DynamicResource RCON_Button_OK}"     Background="{x:Null}" Command="{Binding Button1Command}" CommandParameter="{Binding}"/>
                        <Button x:Name="button2" Margin="5" Content="{DynamicResource RCON_Button_Cancel}" Background="{x:Null}" Command="{Binding Button2Command}" CommandParameter="{Binding}"/>
                    </StackPanel>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</Window>
